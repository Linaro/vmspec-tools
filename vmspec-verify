#!/usr/bin/python3

import argparse
import subprocess
import sys

# FIXME use stat / and Check "Device" output
def find_root_dev():
    return "/dev/vbd"

def find_esp_mount():
    return "/boot/efi"

def parse_fdisk(fdisk_output):
    result = {}
    for line in fdisk_output.stdout.split("\n"):

        if not line.startswith("/"): continue
        parts = line.split()

        inf = {}
        inf['part_type_guid'] = parts[1]

        result[parts[0]] = inf
    return result

def main():
    parser = argparse.ArgumentParser(description="VMSPEC validation suite")
    parser.add_argument("-i","--image", help="Image to test")
    arguments = parser.parse_args()

    image=arguments.image
    #  sudo modprobe nbd max_part=16
    if image is not None:
        blockdev = "/dev/nbd0"
        test_dir = "/tmp/work" # FIXME random and mkdir
        subprocess.run(["qemu-nbd", image, "-c",blockdev])
    else:
        blockdev = find_root_dev()
        test_dir = find_esp_mount()

    fdisk_output = subprocess.run(["fdisk","-l",blockdev,"-o","Device,Type-UUID"],
            stdout=subprocess.PIPE, universal_newlines=True)
    test_disk="/dev/null"
    for disk, info in parse_fdisk(fdisk_output).items():
        if info['part_type_guid'] == "C12A7328-F81F-11D2-BA4B-00A0C93EC93B":
            print("/dev/nbd0 GPT OK")
            print("ESP TYPE OK")
            test_disk = disk
        print([disk, " ".join(["%s=%r" % i for i in info.items()])])
    if image is not None:
        subprocess.run(["mount", "-t", "vfat", test_disk, test_dir])
    file_output = subprocess.run(("file %s/EFI/BOOT/BOOTAA64.EFI" % test_dir ), shell=True, stdout=subprocess.PIPE)
    print(file_output)
    # FIXME wait until finish
    if image is not None:
        subprocess.run(["umount", "-f", "/tmp/work"])
        subprocess.run(["qemu-nbd", "-d","/dev/nbd0"])


if __name__ == '__main__': main()
